#!/bin/sh

set -e

HELP=0
DEBUG=0
SHELL=0
P4ROOT=$PWD/depot

unset P4CONFIG
unset P4DIFF
unset P4EDITOR
unset P4PASSWD
unset P4PORT
unset P4USER

while getopts "dr:s" OPT ; do
   case "$OPT" in
      d)
         DEBUG=1
         ;;
      r)
         P4ROOT=$OPTARG
         ;;
      s)
         SHELL=1
         ;;
      \?)
	 HELP=1
	 break
         ;;
   esac
done

shift $(($OPTIND-1))

if [ $HELP -ne 0 ] ; then
   echo "Usage: $0 [-ds] [-r DIR]"
   exit 1
fi

echo % create p4 depot

export P4ROOT
P4AUDIT=$P4ROOT/audit; export P4AUDIT
P4JOURNAL=$P4ROOT/journal; export P4JOURNAL
P4LOG=$P4ROOT/log; export P4LOG
P4PORT=localhost:16661; export P4PORT
P4DEBUG=$DEBUG; export P4DEBUG

if [ $DEBUG -ne 0 ] ; then
    HGDEBUG=--debug
    filter() { 
        cat
    }
else
    filter() { 
        sed -r -e 's,[0-9]{4}/[0-9]{2}/[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2},$DATE\ $TIME,' \
	       -e 's/[a-z]+@/$USER@/' \
	       -e 's/\{\{mercurial\ [0-9a-f]{40}(:[0-9a-f]{40})?\}\}/\{\{mercurial ids\}\}/'
    }
fi

DATA=0
data() {
   echo $DATA
   DATA=$((DATA+1))
}

rm -fr $P4ROOT $PWD/src $PWD/dst $PWD/new || true

echo % start the p4 server
[ ! -d $P4ROOT ] && mkdir $P4ROOT
p4d -f -J off >$P4ROOT/stdout 2>$P4ROOT/stderr &
trap "echo % stop the p4 server ; p4 admin stop" EXIT

# wait for the server to initialize
while ! p4 ; do
   sleep 1
done >/dev/null 2>/dev/null

echo % create a client spec
mkdir src
cd src

P4CLIENT=hg-p4-import; export P4CLIENT
DEPOTPATH=//depot/test-mercurial-push/...
p4 client -o | sed '/^View:/,$ d' >p4client-$$
echo View: >>p4client-$$
echo " $DEPOTPATH //$P4CLIENT/..." >>p4client-$$
p4 client -i <p4client-$$
rm p4client-$$

echo % populate the depot
data > a
mkdir b
data > b/c
p4 add a b/c
p4 submit -d initial
p4 tag -l change-one ...

echo % change some files
p4 edit a
data >> a
p4 submit -d "p4 change a"

p4 edit b/c
data >> b/c
p4 submit -d "p4 change b/c"

data >>b/d
p4 add b/d
p4 submit -d "p4 add b/d"
p4 tag -l change-four ...

p4 delete b/c
p4 submit -d "p4 delete b/c"

cd ..

echo % convert
hg $HGDEBUG convert -s p4 $DEPOTPATH dst

echo "[paths]" >>dst/.hg/hgrc
echo "default = p4://$P4PORT/$P4CLIENT" >>dst/.hg/hgrc

echo "[extensions]" >>dst/.hg/hgrc
echo "perfarce = $PWD/perfarce.py" >>dst/.hg/hgrc

echo % now work in hg
cd dst
hg $HGDEBUG up

echo % nothing incoming
hg $HGDEBUG incoming

echo % nothing outgoing
hg $HGDEBUG outgoing

echo % change some files in hg
data >> a
hg $HGDEBUG commit -m "hg change a"

data >> b/e
hg $HGDEBUG add b/e
hg $HGDEBUG ci -m "hg add b/e"

data >>b/d
hg $HGDEBUG commit -m "hg change b/d"

echo % id
hg $HGDEBUG p4identify

echo % outgoing
hg $HGDEBUG outgoing | filter

echo % skip a changelist
p4 change -o | sed -r 's/<.+>/test/' >change.$$
p4 change -d $(p4 change -i <change.$$ | awk '/created/ { print $2 }')
rm change.$$

echo % push
hg $HGDEBUG push
echo % p4stat
head .hg/p4stat

echo % pending
hg $HGDEBUG p4pending

echo % submit
hg $HGDEBUG p4submit
echo % p4stat
head .hg/p4stat

echo % pending
hg $HGDEBUG p4pending

echo % outgoing
hg $HGDEBUG outgoing | filter

echo % p4 results
cd ../src
p4 changes       | filter
p4 describe -s 7 | filter

p4 tag -l change-seven ...

cd ../dst

echo % incoming
hg $HGDEBUG incoming

echo % pull
hg $HGDEBUG pull -u

hg glog --style=compact

echo % push submit
data >a
data >c
hg add c
hg ci -m "ac" a c
hg $HGDEBUG push --submit 

echo % p4stat
head .hg/p4stat

echo % hg tag
hg $HGDEBUG pull -u
hg tag -r 5 tag-created-in-hg

hg $HGDEBUG push

if [ $SHELL -ne 0 ] ; then
   echo % run bash
   bash
fi
